---
name: elastic.beanstalk.dev CD
"on":
  push:
    branches: [main]
env:
  AWS_REGION:
    eu-west-1
    # Permission can be added at job level or workflow level
permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_DEPLOYMENT_ROLE}}
          role-session-name: GitHubAction-AssumeRoleWithAction
          aws-region: ${{ env.AWS_REGION }}
          output-credentials: true
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Installing NPM
        # run: npm install
        run: npm ci
      - name: Generate deployment package
        run: npm run next-install && npm run generate-zip
      # - name: Generate deployment package
      #   run: zip -r deploy.zip * -x "**node_modules**"
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time
      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: ${{ steps.current-time.outputs.time }}
          replace-with: "-"
          flags: g
      - name: Beanstalk Deploy my app
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          aws_access_key: ${{ steps.creds.outputs.aws-access-key-id }}
          aws_secret_key: ${{ steps.creds.outputs.aws-secret-access-key }}
          application_name: rapid-next
          environment_name: Rapid-next-medium-env
          region: eu-west-1
          version_label: app-version-${{ steps.format-time.outputs.replaced }}
          deployment_package: deploy.zip
      - name: Deployed successfully!
        #     - run: npm run build --if-present     To be done once you have a test suite ready
        #         cache: 'npm'
        run: echo App deployed to ELB
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
